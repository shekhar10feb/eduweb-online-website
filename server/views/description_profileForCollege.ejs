<div class="w-full flex justify-between items-start sm:flex-row flex-col">
    <h2 class="sm:w-3/12 sm:flex hidden w-full text-left">
        Description:
    </h2>
    <h2 class="sm:w-3/12 sm:hidden flex w-full text-left">
        Description
    </h2>
    <form name="description" 
    class="sm:w-9/12 w-full flex justify-start items-start flex-row description">
        <textarea class="w-11/12 border border-gray-500 rounded-sm pl-1 mr-1" name="college_description"
            id="college_description" cols="5" rows="2" value="<%= user.college_description %>"
            placeholder="Write description here..."><%= user.college_description %></textarea>
        <div class="w-1/12 flex justify-start items-center">
            <button type="submit"
                class="w-full bg-blue-800 md:text-sm text-xs p-1 text-white hover:bg-green-600 rounded-sm description_btn">OK</button>
        </div>
    </form>
</div>

<script>
    // description 
    const description = document.querySelector('.description');

    // console.log("description:", description.children[0].value);

    description.addEventListener('submit', (e) => {
        e.preventDefault();
        // console.log("It is working here!");

        const formData = new FormData();
        formData.append("college_description", description.children[0].value);

        const updatedFunc = (message) => {
            if (message === 'Description updated!') {
                document.querySelector('.description_btn').innerHTML = '&#10004;';
                // document.querySelector('.college_type_btn').style.bgColor = '';

                // Refresh the page after a delay of 1 seconds
                setTimeout(function () {
                    document.querySelector('.description_btn').innerHTML = 'OK';
                }, 1000); // 3000 milliseconds = 1 seconds

            } else {
                document.querySelector('.description_btn').innerHTML = '&#10006;';

                // Refresh the page after a delay of 1 seconds
                setTimeout(function () {
                    document.querySelector('.description_btn').innerHTML = 'OK';
                }, 1000); // 3000 milliseconds = 1 seconds

            }
        }

        if (formData !== null && formData !== undefined && formData !== '') {
            // console.log(formData);
            let fetchFunc = async (formData) => {
                try {
                    const options = {
                        method: 'POST',
                        mode: "no-cors",
                        body: formData,
                    };
                    let fetchItem = await fetch("/api/post_description_college_info", options)
                        .then((response) => response.json())
                        .then(obj => {
                            if (obj.message === "Description updated!") {
                                updatedFunc('Description updated!');
                            } else {
                                updatedFunc('Description updation failed!');
                            }
                        })
                        .then(console.log("received!"));
                } catch (error) {
                    console.log("This is the error in profileForCollege.ejs >  updateCollegeInfo > fetchFunc > fetchItem", error)
                }
            }
            fetchFunc(formData);
        }
        // Refresh the page after a delay of 1 seconds
        setTimeout(function () {
            location.reload();
        }, 1000); // 3000 milliseconds = 1 seconds
    });

</script>